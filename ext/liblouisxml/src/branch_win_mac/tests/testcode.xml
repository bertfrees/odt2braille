<dtbook3>
<p>this is the first page.
<pagenum>1</pagenum>
and there will be more.</p>

<code>
/* liblouisxml Braille Transcription Library

   This file may contain code borrowed from the Linux screenreader
   BRLTTY, copyright (C) 1999-2006 by
   the BRLTTY Team

   Copyright (C) 2004, 2005, 2006
   ViewPlus Technologies, Inc. www.viewplus.com
   and
   JJB Software, Inc. www.jjb-software.com
   All rights reserved

   This file is free software; you can redistribute it and/or modify it
   under the terms of the Lesser or Library GNU General Public License 
   as published by the
   Free Software Foundation; either version 3, or (at your option) any
   later version.

   This file is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
   Library GNU General Public License for more details.

   You should have received a copy of the Library GNU General Public 
   License along with this program; see the file COPYING.  If not, write to
   the Free Software Foundation, 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.

   Maintained by John J. Boyer john.boyer@jjb-software.com
   */

#include &lt;stdio.h>
#include &lt;stdlib.h>
#include &lt;string.h>
#include "louisxml.h"

UserData *ud;

int
main (int argc, char **argv)
{
/* translate xml and text files into braible using liblouisxml*/
  int curarg = 1;
  char *configFileName;
  char *inputFileName;
  char *outputFileName;
  char tempFileName[MAXNAMELEN];
  int logFile = 0;
  FILE *inputFile = NULL;
  FILE *tempFile;
  int ch = 0;
  int pch = 0;
  int nch = 0;
  int charsRead = 0;
  int textFile = 0;
  configFileName = "default.cfg";
  inputFileName = "stdin";
  outputFileName = "stdout";
  UserData *ud;

  if (argc > curarg)
    while (argv[curarg][0] == '-')
      {
	switch (argv[curarg][1] | 32)
	  {
	  case 'h':
	    printf
	      ("Usage: xml2brl [-l] [-f configFile] [inputFile] [outputFile]\n");
	    printf ("[-l]: write errors to log file instead of stderr.");
	    printf
	      ("ConfigFile: configuration file name, default: default.cfg.\n");
	    printf ("inputFile : input file, '-' means stdin\n");
	    printf ("outputFile : output file\n");
	    printf ("xml2brl with no argumenst takes input on stdin\n");
	    printf ("and gives output on stdout.\n");
	    exit (0);
	  case 'l':
	    logFile = 1;
	    break;
	  case 'f':
	    if (argc &lt; (curarg + 1))
	      {
		fprintf (stderr, "No configuration file!");
		exit (1);
	      }
	    configFileName = argv[curarg + 1];
	    curarg++;
	    break;
	  default:
	    fprintf (stderr, "Invalid option %s.\n", argv[curarg]);
	    exit (1);
	  }
	curarg++;
      }
  if (argc > curarg)
    {
      if (argv[curarg][0] != '-')
	inputFileName = argv[curarg];
      curarg++;
    }
  if (argc > curarg)
    outputFileName = argv[curarg];
</code>
<p><pagenum>2</pagenum>Here is the next page.</p>

<code>
  if ((ud = lbx_initialize (configFileName)) == NULL)
    exit (1);

  if (logFile)
    {
      strcpy (tempFileName, ud->path_name);
      strcat (tempFileName, "/xml2brl.log");
      lou_logFile (tempFileName);
    }
  if (strcmp (inputFileName, "stdin") != 0)
    {
      if (!(inputFile = fopen (inputFileName, "r")))
	{
	  lou_logPrint ("Can't open file %s.\n", inputFileName);
	  exit (1);
	}
    }
  else
    inputFile = stdin;
  /*Create somewhat edited temporary file to facilitate use of stdin. */
  strcpy (tempFileName, ud->path_name);
  strcat (tempFileName, "xml2brl.temp");
  if (!(tempFile = fopen (tempFileName, "w")))
    {
      lou_logPrint ("Can't open temporary file.\n");
      exit (1);
    }

  while ((ch = fgetc (inputFile)) != EOF)
    {
      if (ch == 13 || (charsRead == 0 &amp;&amp; ch &lt;= ' '))
	continue;
      if (charsRead == 0)
	{
	  if (ch != '&lt;')
	    textFile = 1;
	  nch = fgetc (inputFile);
	  if (!textFile &amp;&amp; nch != '?')
	    fprintf (tempFile, "%s\n", ud->xml_header);
	}
      if (pch == '>' &amp;&amp; ch == '&lt;')
	fputc (10, tempFile);
      fputc (ch, tempFile);
      pch = ch;
      charsRead++;
      if (charsRead == 1)
	{
	  fputc (nch, tempFile);
	  charsRead++;
	}
    }
  fclose (tempFile);
  if (inputFile != stdin)
    fclose (inputFile);
  if (charsRead > 2)
    {
      if (textFile)
	lbx_translateTextFile (configFileName, tempFileName, outputFileName);
      else
	lbx_translateFile (configFileName, tempFileName, outputFileName);
      lbx_free ();
    }
  return 0;
}
</code>
</dtbook3>

